# Generated by Django 5.2.3 on 2025-06-17 14:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stage",
                    models.CharField(
                        choices=[("screening", "Screening"), ("league", "League")],
                        db_index=True,
                        default="league",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "exam_date",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("duration_minutes", models.PositiveIntegerField(default=60)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("is_published", models.BooleanField(db_index=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                ("answer", models.TextField(blank=True, null=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Candidate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("school", models.CharField(max_length=150)),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        default="profiles/default.png",
                        null=True,
                        upload_to="profiles/",
                    ),
                ),
                (
                    "id_card",
                    models.ImageField(blank=True, null=True, upload_to="id_cards/"),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("screening", "Screening"),
                            ("league", "League"),
                            ("final", "Final"),
                            ("winner", "Winner"),
                        ],
                        db_index=True,
                        default="screening",
                        max_length=15,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CandidateScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.candidate"
                    ),
                ),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.exam"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="exam",
            name="questions",
            field=models.ManyToManyField(blank=True, to="api.question"),
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("occupation", models.CharField(blank=True, max_length=50)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        default="staff_profiles/default.png",
                        null=True,
                        upload_to="staff_profiles/",
                    ),
                ),
                (
                    "id_card",
                    models.ImageField(
                        blank=True, null=True, upload_to="staff_id_cards/"
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("admin", "Admin"),
                            ("moderator", "Moderator"),
                            ("sponsor", "Sponsor"),
                            ("volunteer", "Volunteer"),
                        ],
                        db_index=True,
                        default="volunteer",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="question",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="questions_created",
                to="api.staff",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="questions_updated",
                to="api.staff",
            ),
        ),
        migrations.AddField(
            model_name="exam",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="exams_created",
                to="api.staff",
            ),
        ),
        migrations.AddField(
            model_name="exam",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="exams_updated",
                to="api.staff",
            ),
        ),
        migrations.AddIndex(
            model_name="candidate",
            index=models.Index(
                fields=["role", "is_active"], name="api_candida_role_6cab55_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="candidate",
            index=models.Index(fields=["school"], name="api_candida_school_c5ee40_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="candidatescore",
            unique_together={("candidate", "exam")},
        ),
    ]
